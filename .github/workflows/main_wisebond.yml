name: Deploy to Azure App Service (Native Node.js)

on:
  push:
    branches:
     - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_WEBAPP_NAME: WiseBond
  NODE_VERSION: '22.x'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm ci --production=false
    
    - name: Build application
      run: |
        echo "Building application..."
        npm run build
        
        # Verify the build output
        if [ -f "dist/index.js" ]; then
          echo "✅ Server build successful"
        else
          echo "❌ Server build failed"
          exit 1
        fi
    
    - name: Create deployment package
      run: |
        echo "Creating deployment package..."
        
        # Create deployment directory
        mkdir -p deploy
        
        # Copy essential files only
        cp package.json deploy/
        cp -r dist/ deploy/
        cp -r shared/ deploy/
        cp web.config deploy/
        
        # Create production package.json
        cat > deploy/package.json << 'EOF'
        {
          "name": "wisebond-production",
          "version": "1.0.0",
          "type": "module",
          "scripts": {
            "start": "node dist/index.js"
          },
          "engines": {
            "node": "22.x"
          },
          "dependencies": {
            "express": "^4.21.2",
            "express-session": "^1.18.2",
            "passport": "^0.7.0",
            "passport-local": "^1.0.0",
            "bcrypt": "^5.1.1",
            "dotenv": "^16.4.7",
            "drizzle-orm": "^0.36.4",
            "postgres": "^3.4.7",
            "connect-pg-simple": "^10.0.0",
            "helmet": "^7.1.0",
            "cors": "^2.8.5",
            "compression": "^1.7.4",
            "mailgun.js": "^12.0.1",
            "axios": "^1.11.0",
            "zod": "^3.23.8",
            "pdf-lib": "^1.17.1",
            "puppeteer": "^24.10.1",
            "ws": "^8.18.2",
            "@azure/identity": "^4.10.0",
            "@azure/keyvault-secrets": "^4.9.0",
            "handlebars": "^4.7.8",
            "date-fns": "^3.6.0",
            "form-data": "^4.0.4",
            "http-errors": "^2.0.0",
            "path-to-regexp": "^0.1.12",
            "drizzle-zod": "^0.5.1",
            "nanoid": "^5.1.5",
            "zod-validation-error": "^3.4.0"
          }
        }
        EOF
        
        # Install production dependencies
        cd deploy
        npm install --production --no-optional --silent
        cd ..
        
        # Create zip package
        cd deploy
        zip -r ../deployment.zip . -q
        cd ..
        
        echo "📦 Package size: $(du -sh deployment.zip | cut -f1)"

    - name: 'Login to Azure'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'production'
        package: deployment.zip
        clean: true
        restart: true
        startup-command: 'npm start'  # Explicit startup command

    - name: Verify deployment
      run: |
        echo "🔍 Verifying deployment..."
        sleep 30
        
        # Check app status
        APP_STATE=$(az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP || 'your-resource-group' }} --query "state" --output tsv)
        echo "App Service State: $APP_STATE"
        
        if [ "$APP_STATE" = "Running" ]; then
          echo "✅ App Service is running successfully"
        else
          echo "⚠️  App Service state: $APP_STATE"
        fi

    - name: 🎉 Deployment Summary
      run: |
        echo "✅ Deployment completed!"
        echo "🌐 Application URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
        echo "📦 Package size: $(du -sh deployment.zip | cut -f1)"
